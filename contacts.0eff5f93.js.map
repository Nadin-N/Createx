{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@swc/helpers/lib/_non_iterable_spread.js","src/contacts.js","src/js/contacts_page/question-form.js","node_modules/@swc/helpers/lib/_to_consumable_array.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","import './js/common/header';\r\nimport './js/contacts_page/question-form';\r\nimport './js/common/footer';\r\n","export default class QuestionForm {\r\n  constructor() {\r\n    this.refs = {\r\n      questionForm: document.querySelector('.js-questions-form'),\r\n      questionFormSubmit: document.querySelector('.js-questions-button'),\r\n      errorMessages: document.querySelectorAll('.js-questions-error-message'),\r\n    };\r\n\r\n    this.outputQuestionForm = {};\r\n    this.addListeners();\r\n  }\r\n\r\n  addListeners() {\r\n    this.refs.questionForm.addEventListener('submit', this.onSubmit.bind(this));\r\n    this.refs.questionForm.addEventListener('change', this.onChange.bind(this));\r\n  }\r\n\r\n  onChange(event) {\r\n    const { value, name } = event.target;\r\n\r\n    switch (name) {\r\n      case 'email':\r\n        console.log();\r\n        this.validateEmail(event, value);\r\n        break;\r\n      case 'phone':\r\n        this.validatePhone(event, value);\r\n        break;\r\n      case 'firstName':\r\n        this.validateName(event, value);\r\n        break;\r\n      case 'lastName':\r\n        this.validateName(event, value);\r\n        break;\r\n    }\r\n    this.disableWhenError();\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const form = new FormData(this.refs.questionForm);\r\n\r\n    for (let [name, value] of form) {\r\n      this.outputQuestionForm[name] = value;\r\n    }\r\n\r\n    console.log(this.outputQuestionForm);\r\n\r\n    event.target.reset();\r\n  }\r\n\r\n  disableWhenError() {\r\n    const errorMessageArr = [...this.refs.errorMessages];\r\n\r\n    errorMessageArr.every(el => !el.textContent)\r\n      ? this.refs.questionFormSubmit.removeAttribute('disabled')\r\n      : this.refs.questionFormSubmit.setAttribute('disabled', '');\r\n  }\r\n\r\n  validateEmail(event, email) {\r\n    const emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\r\n    const result = emailRegex.test(email);\r\n    const message = 'Please enter a valid email address';\r\n\r\n    this.insertMessage(result, event, message);\r\n  }\r\n\r\n  validatePhone(event, phone) {\r\n    const phoneRegex = /^\\d{3}-\\d{3}-\\d{2}-\\d{2}$/; //Phone in format: XXX-XXX-XX-XX\r\n    let result = phoneRegex.test(phone) || !event.target.value; // \"|| !event.target.value\" in case if phone is not required\r\n    const message = 'Please enter a valid phone number';\r\n\r\n    this.insertMessage(result, event, message);\r\n  }\r\n\r\n  validateName(event, name) {\r\n    const nameRegex = /^[A-Za-z\\s\\-]+$/; // Allow letters, spaces, and hyphens\r\n    const result = name.trim() && nameRegex.test(name); // \"name.trim()\"  if user enters \" \"(space only)\r\n    const message = 'Please enter a valid name (letters with spaces, hyphens)';\r\n\r\n    this.insertMessage(result, event, message);\r\n  }\r\n\r\n  insertMessage(result, event, message) {\r\n    event.target.closest('.js-input-wrap').lastElementChild.textContent = result\r\n      ? ''\r\n      : message;\r\n  }\r\n}\r\n\r\nnew QuestionForm();\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n"],"names":["Object","defineProperty","module","exports","value","default","arr","Array","isArray","$f215c72f040a88cf$var$_arrayLikeToArray","obj","parcelRequire","__esModule","TypeError","$8MBJY","$6195f07b5409ba15$exports","$6195f07b5409ba15$var$_arrayWithoutHoles","$6195f07b5409ba15$var$_iterableToArray","$6195f07b5409ba15$var$_unsupportedIterableToArray","$6195f07b5409ba15$var$_nonIterableSpread","$6195f07b5409ba15$var$_interopRequireDefault","QuestionForm","this","refs","questionForm","document","querySelector","questionFormSubmit","errorMessages","querySelectorAll","outputQuestionForm","addListeners","key","addEventListener","onSubmit","bind","onChange","event","_target","target","name","console","log","validateEmail","validatePhone","validateName","disableWhenError","preventDefault","form","FormData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_value","$parcel$interopDefault","$1t1Wn","err","return","reset","every","el","textContent","removeAttribute","setAttribute","email","result","test","insertMessage","phone","trim","message","closest","lastElementChild"],"version":3,"file":"contacts.0eff5f93.js.map"}