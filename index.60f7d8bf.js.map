{"mappings":"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","sources":["src/js/common/header.js","node_modules/throttle-debounce/throttle.js","src/js/main_page/benefit.js","src/js/main_page/courses-preview.js","src/js/common/subscription.js","src/js/common/footer.js"],"sourcesContent":["class Header {\r\n  static CLOSE_MODAL_MENU_BTN_CODE = 'Escape';\r\n\r\n  constructor() {\r\n    this.refs = {\r\n      openMenuBtn: document.querySelector('.js-menu-open'),\r\n      closeMenuBtn: document.querySelector('.js-menu-close'),\r\n      menu: document.querySelector('.js-modal-menu'),\r\n      modalMenuItems: document.querySelectorAll('.js-modal-item'),\r\n      body: document.querySelector('body'),\r\n    };\r\n\r\n    this.addListeners();\r\n    this.defineModalCurrentPageLink();\r\n  }\r\n\r\n  addListeners() {\r\n    this.refs.openMenuBtn.addEventListener('click', this.openMenu.bind(this));\r\n  }\r\n\r\n  openMenu() {\r\n    this.refs.menu.classList.remove('is-hidden');\r\n    this.refs.body.classList.add('no-scroll');\r\n    this.refs.closeMenuBtn.addEventListener('click', this.closeMenu.bind(this));\r\n    document.addEventListener('keydown', this.closeMenuWithBtn.bind(this));\r\n    document.addEventListener(\r\n      'click',\r\n      this.closeMenuWithClickOutside.bind(this)\r\n    );\r\n  }\r\n\r\n  closeMenu() {\r\n    this.refs.menu.classList.add('is-hidden');\r\n    this.refs.body.classList.remove('no-scroll');\r\n    document.removeEventListener('keydown', this.closeMenuWithBtn.bind(this));\r\n    document.removeEventListener(\r\n      'click',\r\n      this.closeMenuWithClickOutside.bind(this)\r\n    );\r\n    this.refs.closeMenuBtn.removeEventListener(\r\n      'click',\r\n      this.closeMenu.bind(this)\r\n    );\r\n  }\r\n\r\n  closeMenuWithBtn(event) {\r\n    if (event.code !== Header.CLOSE_MODAL_MENU_BTN_CODE) {\r\n      return;\r\n    }\r\n    this.closeMenu();\r\n  }\r\n\r\n  closeMenuWithClickOutside(event) {\r\n    if (\r\n      event.target.closest('.js-modal-menu') ||\r\n      event.target.closest('.js-menu-open')\r\n    ) {\r\n      return;\r\n    }\r\n    this.closeMenu();\r\n  }\r\n\r\n  defineModalCurrentPageLink() {\r\n    const dataPathArr = [];\r\n\r\n    this.refs.modalMenuItems.forEach(item => {\r\n      let itemName = item.dataset.path;\r\n\r\n      dataPathArr.push(itemName);\r\n\r\n      window.location.href.includes(itemName)\r\n        ? item.classList.add('current-page-main')\r\n        : item.classList.remove('current-page-main');\r\n    });\r\n\r\n    // const isIncludeAnyLink = dataPathArr.some(item =>\r\n    //   window.location.href.includes(item)\r\n    // );\r\n\r\n    // if (!isIncludeAnyLink) {\r\n    //   this.refs.defaultModalLink.classList.add('current-page-main');\r\n    // }\r\n  }\r\n}\r\nnew Header();\r\n","/* eslint-disable no-undefined,no-param-reassign,no-shadow */\n\n/**\n * Throttle execution of a function. Especially useful for rate limiting\n * execution of handlers on events like resize and scroll.\n *\n * @param {number} delay -                  A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher)\n *                                            are most useful.\n * @param {Function} callback -               A function to be executed after delay milliseconds. The `this` context and all arguments are passed through,\n *                                            as-is, to `callback` when the throttled-function is executed.\n * @param {object} [options] -              An object to configure options.\n * @param {boolean} [options.noTrailing] -   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds\n *                                            while the throttled-function is being called. If noTrailing is false or unspecified, callback will be executed\n *                                            one final time after the last throttled-function call. (After the throttled-function has not been called for\n *                                            `delay` milliseconds, the internal counter is reset).\n * @param {boolean} [options.noLeading] -   Optional, defaults to false. If noLeading is false, the first throttled-function call will execute callback\n *                                            immediately. If noLeading is true, the first the callback execution will be skipped. It should be noted that\n *                                            callback will never executed if both noLeading = true and noTrailing = true.\n * @param {boolean} [options.debounceMode] - If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is\n *                                            false (at end), schedule `callback` to execute after `delay` ms.\n *\n * @returns {Function} A new, throttled, function.\n */\nexport default function (delay, callback, options) {\n\tconst {\n\t\tnoTrailing = false,\n\t\tnoLeading = false,\n\t\tdebounceMode = undefined\n\t} = options || {};\n\t/*\n\t * After wrapper has stopped being called, this timeout ensures that\n\t * `callback` is executed at the proper times in `throttle` and `end`\n\t * debounce modes.\n\t */\n\tlet timeoutID;\n\tlet cancelled = false;\n\n\t// Keep track of the last time `callback` was executed.\n\tlet lastExec = 0;\n\n\t// Function to clear existing timeout\n\tfunction clearExistingTimeout() {\n\t\tif (timeoutID) {\n\t\t\tclearTimeout(timeoutID);\n\t\t}\n\t}\n\n\t// Function to cancel next exec\n\tfunction cancel(options) {\n\t\tconst { upcomingOnly = false } = options || {};\n\t\tclearExistingTimeout();\n\t\tcancelled = !upcomingOnly;\n\t}\n\n\t/*\n\t * The `wrapper` function encapsulates all of the throttling / debouncing\n\t * functionality and when executed will limit the rate at which `callback`\n\t * is executed.\n\t */\n\tfunction wrapper(...arguments_) {\n\t\tlet self = this;\n\t\tlet elapsed = Date.now() - lastExec;\n\n\t\tif (cancelled) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Execute `callback` and update the `lastExec` timestamp.\n\t\tfunction exec() {\n\t\t\tlastExec = Date.now();\n\t\t\tcallback.apply(self, arguments_);\n\t\t}\n\n\t\t/*\n\t\t * If `debounceMode` is true (at begin) this is used to clear the flag\n\t\t * to allow future `callback` executions.\n\t\t */\n\t\tfunction clear() {\n\t\t\ttimeoutID = undefined;\n\t\t}\n\n\t\tif (!noLeading && debounceMode && !timeoutID) {\n\t\t\t/*\n\t\t\t * Since `wrapper` is being called for the first time and\n\t\t\t * `debounceMode` is true (at begin), execute `callback`\n\t\t\t * and noLeading != true.\n\t\t\t */\n\t\t\texec();\n\t\t}\n\n\t\tclearExistingTimeout();\n\n\t\tif (debounceMode === undefined && elapsed > delay) {\n\t\t\tif (noLeading) {\n\t\t\t\t/*\n\t\t\t\t * In throttle mode with noLeading, if `delay` time has\n\t\t\t\t * been exceeded, update `lastExec` and schedule `callback`\n\t\t\t\t * to execute after `delay` ms.\n\t\t\t\t */\n\t\t\t\tlastExec = Date.now();\n\t\t\t\tif (!noTrailing) {\n\t\t\t\t\ttimeoutID = setTimeout(debounceMode ? clear : exec, delay);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/*\n\t\t\t\t * In throttle mode without noLeading, if `delay` time has been exceeded, execute\n\t\t\t\t * `callback`.\n\t\t\t\t */\n\t\t\t\texec();\n\t\t\t}\n\t\t} else if (noTrailing !== true) {\n\t\t\t/*\n\t\t\t * In trailing throttle mode, since `delay` time has not been\n\t\t\t * exceeded, schedule `callback` to execute `delay` ms after most\n\t\t\t * recent execution.\n\t\t\t *\n\t\t\t * If `debounceMode` is true (at begin), schedule `clear` to execute\n\t\t\t * after `delay` ms.\n\t\t\t *\n\t\t\t * If `debounceMode` is false (at end), schedule `callback` to\n\t\t\t * execute after `delay` ms.\n\t\t\t */\n\t\t\ttimeoutID = setTimeout(\n\t\t\t\tdebounceMode ? clear : exec,\n\t\t\t\tdebounceMode === undefined ? delay - elapsed : delay\n\t\t\t);\n\t\t}\n\t}\n\n\twrapper.cancel = cancel;\n\n\t// Return the wrapper function.\n\treturn wrapper;\n}\n","class BenefitsTabs {\r\n  constructor() {\r\n    this.refs = {\r\n      benefitGroups: document.querySelectorAll('.js-benefits-item'),\r\n      tabButtons: document.querySelectorAll('.js-tab-button'),\r\n    };\r\n\r\n    this.addListeners();\r\n  }\r\n\r\n  addListeners() {\r\n    this.refs.tabButtons.forEach(button =>\r\n      button.addEventListener('click', this.selectBenefitGroup.bind(this))\r\n    );\r\n  }\r\n\r\n  selectBenefitGroup(event) {\r\n    const clickedButton = event.target.closest('.js-tab-button');\r\n    this.refs.tabButtons.forEach(button => {\r\n      clickedButton.name !== button.name\r\n        ? button.classList.remove(`clicked`)\r\n        : button.classList.add(`clicked`);\r\n    });\r\n\r\n    this.refs.benefitGroups.forEach(group => {\r\n      clickedButton.name === group.dataset.name\r\n        ? group.classList.remove('is-hidden')\r\n        : group.classList.add('is-hidden');\r\n    });\r\n  }\r\n}\r\n\r\nnew BenefitsTabs();\r\n","import { throttle } from 'throttle-debounce';\r\n\r\nclass AnimateCards {\r\n  constructor() {\r\n    this.refs = {\r\n      coursesList: document.querySelector('.courses-preview__box'),\r\n      coursesCards: document.querySelectorAll('.card-courses__img img'),\r\n    };\r\n\r\n    this.addListener();\r\n    // this.isInViewport();\r\n    // this.animate();\r\n    // this.getRect();\r\n  }\r\n\r\n  addListener() {\r\n    // document.addEventListener(\r\n    //   'scroll',\r\n    //   throttle(1000, this.isInViewport.bind(this))\r\n    // );\r\n    throttle(1000, this.isInViewport.bind(this));\r\n  }\r\n\r\n  isInViewport() {\r\n    const rect = this.refs.coursesList.getBoundingClientRect();\r\n    const isVisible =\r\n      rect.top >= 0 &&\r\n      rect.left >= 0 &&\r\n      rect.bottom <=\r\n        (window.innerHeight || document.documentElement.clientHeight) &&\r\n      rect.right <= (window.innerWidth || document.documentElement.clientWidth);\r\n    console.log(isVisible);\r\n\r\n    let timerId = null;\r\n\r\n    // if (isVisible) {\r\n    //   if (timerId) {\r\n    //     return;\r\n    //   } else {\r\n    //     timerId = setInterval(() => this.animate(), 1000);\r\n    //     console.log('timerId set:', timerId);\r\n    //   }\r\n    // } else {\r\n    //   console.log('timerId clear:', timerId);\r\n    //   clearInterval(timerId);\r\n    // }\r\n\r\n    isVisible\r\n      ? (timerId = setInterval(() => this.animate(), 1000))\r\n      : clearInterval(timerId);\r\n  }\r\n\r\n  getRect() {\r\n    let rect = this.refs.coursesList.getBoundingClientRect();\r\n    console.log(rect.top);\r\n    // if (rect.top < 0) {\r\n    //   return;\r\n    // }\r\n\r\n    // let timerId = null;\r\n\r\n    // rect.top > 0\r\n    //   ? (timerId = setInterval(() => this.animate(), 1000))\r\n    //   : clearInterval(timerId);\r\n\r\n    // if (rect.top > 0) {\r\n    //   if (timerId) {\r\n    //     return;\r\n    //   } else {\r\n    //     timerId = setInterval(() => this.animate(), 1000);\r\n    //   }\r\n    // } else {\r\n    //   clearInterval(timerId);\r\n    // }\r\n\r\n    // console.log(rect.top);\r\n    // if (rect.top > 0) {\r\n    //   this.animate();\r\n    // }\r\n  }\r\n\r\n  // }\r\n  animate() {\r\n    // console.log('scrolling...');\r\n    // let rect = this.refs.coursesList.getBoundingClientRect();\r\n    // console.log('The bounding Rect of element is ', rect);\r\n    // if (rect.top > 0) {\r\n    console.log(Math.floor(Math.random() * this.refs.coursesCards.length));\r\n    // console.log(this.refs.coursesCards.length);\r\n\r\n    const numberOfCardToAnimate = Math.floor(\r\n      Math.random() * this.refs.coursesCards.length\r\n    );\r\n\r\n    // this.refs.coursesCards.forEach(card => {\r\n    // \tconsole.log();\r\n    // })\r\n    // this.animate()\r\n    this.refs.coursesCards[numberOfCardToAnimate].classList.add(\r\n      'scale-animated'\r\n    );\r\n\r\n    setTimeout(() => {\r\n      this.refs.coursesCards[numberOfCardToAnimate].classList.remove(\r\n        'scale-animated'\r\n      );\r\n      // this.animate();\r\n    }, 1000);\r\n  }\r\n  // }\r\n}\r\n\r\nnew AnimateCards();\r\n","class AdvertForm {\r\n  constructor() {\r\n    this.refs = {\r\n      advertForm: document.querySelector('.js-advert-form'),\r\n      advertFormMailInput: document.querySelector(\r\n        '.js-advert-form-input[name=\"advertEmail\"]'\r\n      ),\r\n    };\r\n\r\n    this.outputAdvertFormObject = {};\r\n\r\n    this.addListeners();\r\n  }\r\n\r\n  addListeners() {\r\n    this.refs.advertForm.addEventListener('submit', this.onSubmit.bind(this));\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const form = new FormData(this.refs.advertForm);\r\n\r\n    for (let [name, value] of form) {\r\n      this.outputAdvertFormObject[name] = value;\r\n    }\r\n\r\n    console.log(this.outputAdvertFormObject);\r\n\r\n    event.target.reset();\r\n  }\r\n}\r\n\r\nnew AdvertForm();\r\n","class NewsLetterForm {\r\n  constructor() {\r\n    this.refs = {\r\n      newsLetterForm: document.querySelector('.js-newsletter-form'),\r\n      newsLetterFormMailInput: document.querySelector(\r\n        '.js-newsletter-form-input[name=\"newsEmail\"]'\r\n      ),\r\n    };\r\n\r\n    this.outputNewsLetterFormObject = {};\r\n\r\n    this.addListeners();\r\n  }\r\n\r\n  addListeners() {\r\n    this.refs.newsLetterForm.addEventListener(\r\n      'submit',\r\n      this.onSubmit.bind(this)\r\n    );\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const form = new FormData(this.refs.newsLetterForm);\r\n\r\n    for (let [name, value] of form) {\r\n      this.outputNewsLetterFormObject[name] = value;\r\n    }\r\n\r\n    console.log(this.outputNewsLetterFormObject);\r\n\r\n    event.target.reset();\r\n  }\r\n}\r\n\r\nnew NewsLetterForm();\r\n"],"names":["$508a65694ae9f744$var$Header","static","constructor","this","refs","openMenuBtn","document","querySelector","closeMenuBtn","menu","modalMenuItems","querySelectorAll","body","addListeners","defineModalCurrentPageLink","addEventListener","openMenu","bind","classList","remove","add","closeMenu","closeMenuWithBtn","closeMenuWithClickOutside","removeEventListener","event","code","CLOSE_MODAL_MENU_BTN_CODE","target","closest","dataPathArr","forEach","item","itemName","dataset","path","push","window","location","href","includes","$8b2e3fa012f8d6d4$export$de363e709c412c8a","delay","callback","options","timeoutID","_ref$noTrailing","_ref","noTrailing","_ref$noLeading","noLeading","_ref$debounceMode","debounceMode","undefined","cancelled","lastExec","clearExistingTimeout","clearTimeout","wrapper","_len","arguments","length","arguments_","Array","_key","self","elapsed","Date","now","exec","apply","clear","setTimeout","cancel","_ref2$upcomingOnly","upcomingOnly","benefitGroups","tabButtons","button","selectBenefitGroup","clickedButton","name","group","coursesList","coursesCards","addListener","isInViewport","rect","getBoundingClientRect","isVisible","top","left","bottom","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","console","log","timerId","setInterval","animate","clearInterval","getRect","Math","floor","random","numberOfCardToAnimate","advertForm","advertFormMailInput","outputAdvertFormObject","onSubmit","preventDefault","form","FormData","value","reset","newsLetterForm","newsLetterFormMailInput","outputNewsLetterFormObject"],"version":3,"file":"index.60f7d8bf.js.map"}